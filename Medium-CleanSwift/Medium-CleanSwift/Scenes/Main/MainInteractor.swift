//
//  MainInteractor.swift
//  Medium-CleanSwift
//
//  Created by Uladzislau Komar on 30.01.23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainBusinessLogic {
    func fetchCartoonCharacters(request: Main.desplayCartoonCharacters.Request)
}

protocol MainDataStore {
    var characters: [CharResult] { get set }
}

class MainInteractor: MainBusinessLogic, MainDataStore {
    var presenter: MainPresentationLogic?
    var worker: MainWorker?
    var characters: [CharResult] = []
    private let network = Network()
    
    // MARK: Do something
    
    func fetchCartoonCharacters(request: Main.desplayCartoonCharacters.Request) {
        
        network.fatchCharacters { [weak self] result in
            DispatchQueue.main.async {
                switch result {
                case .success(let result):
                    let characters = result.results
                    self?.characters = characters
                    let response = Main.desplayCartoonCharacters.Response(characters: characters)
                    self?.presenter?.presentFetchedCartoonCharacters(response: response)
                case .failure(let failure):
                    // Здесь можно как-то обработать ошибку
                    print(failure)
                }
            }
        }
        
    }
}
