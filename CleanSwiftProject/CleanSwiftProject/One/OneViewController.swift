//
//  OneViewController.swift
//  CleanSwiftProject
//
//  Created by Uladzislau Komar on 21.01.23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol OneDisplayLogic: AnyObject {
    func displaySomething(viewModel: One.Something.ViewModel)
}

class OneViewController: UIViewController, OneDisplayLogic {
    var interactor: OneBusinessLogic?
    var router: (NSObjectProtocol & OneRoutingLogic & OneDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = OneInteractor()
        let presenter = OnePresenter()
        let router = OneRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .green
        doSomething()
        let button = UIButton()
        button.setTitle("Hello", for: .normal)
        button.center = view.center
        button.addTarget(self, action: #selector(nextPage), for: .touchUpInside)
        view.addSubview(button)
        button.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            button.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            button.centerYAnchor.constraint(equalTo: view.centerYAnchor)
        ])
    }
    
    @objc func nextPage() {
        let thisText = "Such a wonderful life"
        interactor?.setNewValue(value: thisText)
        router?.routeToTwoViewController()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething() {
        let request = One.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: One.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}
